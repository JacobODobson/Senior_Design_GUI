/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/home_screen/HomeViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <BitmapDatabase.hpp>

HomeViewBase::HomeViewBase() :
    buttonCallback(this, &HomeViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(229, 229, 229));

    box2.setPosition(0, 0, 800, 33);
    box2.setColor(touchgfx::Color::getColorFromRGB(244, 244, 244));

    textArea1.setXY(361, 4);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_24KL));

    digitalClock1.setPosition(14, 4, 71, 25);
    digitalClock1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    digitalClock1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z806));
    digitalClock1.displayLeadingZeroForHourIndicator(true);
    digitalClock1.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR_NO_SECONDS);
    digitalClock1.setTime24Hour(10, 10, 0);

    Status_Background.setXY(349, 149);
    Status_Background.setBitmap(touchgfx::Bitmap(BITMAP_STATUS_RECTANGLE_ID));

    Logo_Background.setXY(349, 49);
    Logo_Background.setBitmap(touchgfx::Bitmap(BITMAP_LOGO_BORDER_ID));

    Logo.setXY(361, 58);
    Logo.setBitmap(touchgfx::Bitmap(BITMAP_TRUE_LINE_LOGO_ID));

    Map.setXY(371, 240);
    Map.setBitmap(touchgfx::Bitmap(BITMAP_SMALL_MAP_ID));

    Map_Button.setXY(91, 49);
    Map_Button.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_UNPRESSED_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_ID));
    Map_Button.setAction(buttonCallback);

    Data_Button.setXY(91, 133);
    Data_Button.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_UNPRESSED_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_ID));

    Export_Button.setXY(91, 219);
    Export_Button.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_UNPRESSED_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_ID));

    Node_Button.setXY(91, 306);
    Node_Button.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_UNPRESSED_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_ID));

    Settings_Button.setXY(91, 391);
    Settings_Button.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_UNPRESSED_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_ID));

    Map_Text.setXY(161, 69);
    Map_Text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Map_Text.setLinespacing(0);
    Map_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3FJ1));

    Data_Text.setXY(156, 153);
    Data_Text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Data_Text.setLinespacing(0);
    Data_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7GPD));

    Export_Text.setXY(146, 239);
    Export_Text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Export_Text.setLinespacing(0);
    Export_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WZPV));

    Nodes_Test.setXY(148, 326);
    Nodes_Test.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Nodes_Test.setLinespacing(0);
    Nodes_Test.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5FCY));

    Settings_Text.setXY(141, 411);
    Settings_Text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Settings_Text.setLinespacing(0);
    Settings_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A0I4));

    Line.setXY(358, 178);
    Line.setBitmap(touchgfx::Bitmap(BITMAP_STATUS_LINE_ID));

    Info_Text.setXY(371, 153);
    Info_Text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Info_Text.setLinespacing(0);
    Info_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_242G));

    textArea2.setXY(371, 180);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LKM));

    textArea3.setXY(371, 201);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HZ5A));

    textArea4.setXY(372, 221);
    textArea4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea4.setLinespacing(0);
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JUD7));

    add(__background);
    add(box1);
    add(box2);
    add(textArea1);
    add(digitalClock1);
    add(Status_Background);
    add(Logo_Background);
    add(Logo);
    add(Map);
    add(Map_Button);
    add(Data_Button);
    add(Export_Button);
    add(Node_Button);
    add(Settings_Button);
    add(Map_Text);
    add(Data_Text);
    add(Export_Text);
    add(Nodes_Test);
    add(Settings_Text);
    add(Line);
    add(Info_Text);
    add(textArea2);
    add(textArea3);
    add(textArea4);
}

void HomeViewBase::setupScreen()
{

}

void HomeViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Map_Button)
    {
        //To_Map
        //When Map_Button clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}
